Задаем простое число:
gap> n:=10;
10

1. Создаем списки простых в диапазоне
gap> lp:=Filtered([2..n],IsPrime);
[ 2, 3, 5, 7 ]
Определяет число элементов в списке.
gap> l:=Length(lp);
4

2.Создание вспомогательных списков из числа делителей
gap> tau1:=List(lp,p->Tau(p-1));
[ 1, 2, 3, 4 ]
gap> tauN1:=List(lp,p->Tau(p+1));
[ 2, 3, 4, 4 ]


3.Вычисление значений сумм ТИтмарша
gap> Q1:=[];
[  ]
gap> QN1:=[];
[  ]
gap> QN1[1]:=[2,1];
[ 2, 1 ]
gap> Q1[1]:=[2,1];
[ 2, 1 ]
gap> QN1[1]:=[2,2];
[ 2, 2 ]
gap> for i in [2..l] do
> Add(QN1,[lp[i],QN1[i-1][2]+tauN1[i]]);
> Add(Q1,[lp[i],Q1[i-1][2]+tau1[i]]);
> od;
gap> Q1;
[ [ 2, 1 ], [ 3, 3 ], [ 5, 6 ], [ 7, 10 ] ]
gap> QN1;
[ [ 2, 2 ], [ 3, 5 ], [ 5, 9 ], [ 7, 13 ] ]

4. Вычисление значений частных сумм Титчмарша
gap> q1:=List(Q1,n->[n[1],n[2]/n[1]]);
[ [ 2, 1/2 ], [ 3, 1 ], [ 5, 6/5 ], [ 7, 10/7 ] ]
gap> qN1:=List(QN1,n->[n[1],n[2]/n[1]]);
[ [ 2, 1 ], [ 3, 5/3 ], [ 5, 9/5 ], [ 7, 13/7 ] ]
gap> Q1:=List(Q1,n->[n[1],n[2]/n[1]]);
[ [ 2, 1/2 ], [ 3, 1 ], [ 5, 6/5 ], [ 7, 10/7 ] ]
gap> q12:=List(q1,n->n[2]);
[ 1/2, 1, 6/5, 10/7 ]
gap> qN12:=List(qN1,n->n[2]);
[ 1, 5/3, 9/5, 13/7 ]
gap> Q12:=List(Q1,n->n[2]);
[ 1/2, 1, 6/5, 10/7 ]

5.Вычисление min и max значений частных
gap> maxq1:=MaximumList(q12);
10/7
gap> minq1:=MinimumList(q12);
1/2
gap> maxqN1:=MaximumList(qN12);
13/7
gap> minqN1:=MinimumList(qN12);
1

Находим позиции
gap> posmaxq1:=Positions(q12,maxq1);
[ 4 ]
gap> posminq1:=Positions(q12,minq1);
[ 1 ]
gap> posmaxqN1:=Positions(qN12,maxqN1);
[ 4 ]
gap> posminqN1:=Positions(qN12,minqN1);
[ 1 ]

Находим простые числа
gap> lp[1];
2
gap> lp[4];
7
gap> lp[1];
2
gap> quit;
выход
