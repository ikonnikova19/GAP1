gap> n:=100;
100

1. Создаем списки простых в диапазоне
gap> lp:=Filtered([2..n],IsPrime);
[ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97 ]
gap> l:=Length(lp);
25

2.Создание вспомогательных списков из числа делителей
gap> tau1:=List(lp,p->Tau(p-1));
[ 1, 2, 3, 4, 4, 6, 5, 6, 4, 6, 8, 9, 8, 8, 4, 6, 4, 12, 8, 8, 12, 8, 4, 8, 12 ]
gap> tauN1:=List(lp,p->Tau(p+1));
[ 2, 3, 4, 4, 6, 4, 6, 6, 8, 8, 6, 4, 8, 6, 10, 8, 12, 4, 6, 12, 4, 10, 12, 12, 6 ]

3.Вычисление значений сумм ТИтмарша
gap> Q1:=[];
[  ]
gap> QN1:=[];
[  ]
gap> Q1[1]:=[1];
[ 1 ]
gap> QN1[1]:=[2];
[ 2 ]
gap> for i in [2..l] do
> Add(Q1,Q1[i-1]+tau1[i]);
> Add(QN1,QN1[i-1]+tauN1[i]);
> od;
gap> Q1;
[ [ 1 ], [ 3 ], [ 6 ], [ 10 ], [ 14 ], [ 20 ], [ 25 ], [ 31 ], [ 35 ], [ 41 ], [ 49 ], [ 58 ], [ 66 ], [ 74 ], 
  [ 78 ], [ 84 ], [ 88 ], [ 100 ], [ 108 ], [ 116 ], [ 128 ], [ 136 ], [ 140 ], [ 148 ], [ 160 ] ]
gap> QN1;
[ [ 2 ], [ 5 ], [ 9 ], [ 13 ], [ 19 ], [ 23 ], [ 29 ], [ 35 ], [ 43 ], [ 51 ], [ 57 ], [ 61 ], [ 69 ], [ 75 ], 
  [ 85 ], [ 93 ], [ 105 ], [ 109 ], [ 115 ], [ 127 ], [ 131 ], [ 141 ], [ 153 ], [ 165 ], [ 171 ] ]
gap> PQ1:=[];
[  ]
gap> PQN1:=[];
[  ]
gap> for i in [1..l] do
> Add(PQ1,[lp[i],Q1[i]]);
> Add(PQN1,[lp[i],QN1[i]]);
> od;
gap> PQ1;
[ [ 2, [ 1 ] ], [ 3, [ 3 ] ], [ 5, [ 6 ] ], [ 7, [ 10 ] ], [ 11, [ 14 ] ], [ 13, [ 20 ] ], [ 17, [ 25 ] ], 
  [ 19, [ 31 ] ], [ 23, [ 35 ] ], [ 29, [ 41 ] ], [ 31, [ 49 ] ], [ 37, [ 58 ] ], [ 41, [ 66 ] ], [ 43, [ 74 ] ], 
  [ 47, [ 78 ] ], [ 53, [ 84 ] ], [ 59, [ 88 ] ], [ 61, [ 100 ] ], [ 67, [ 108 ] ], [ 71, [ 116 ] ], [ 73, [ 128 ] ], 
  [ 79, [ 136 ] ], [ 83, [ 140 ] ], [ 89, [ 148 ] ], [ 97, [ 160 ] ] ]
gap> PQN1;
[ [ 2, [ 2 ] ], [ 3, [ 5 ] ], [ 5, [ 9 ] ], [ 7, [ 13 ] ], [ 11, [ 19 ] ], [ 13, [ 23 ] ], [ 17, [ 29 ] ], 
  [ 19, [ 35 ] ], [ 23, [ 43 ] ], [ 29, [ 51 ] ], [ 31, [ 57 ] ], [ 37, [ 61 ] ], [ 41, [ 69 ] ], [ 43, [ 75 ] ], 
  [ 47, [ 85 ] ], [ 53, [ 93 ] ], [ 59, [ 105 ] ], [ 61, [ 109 ] ], [ 67, [ 115 ] ], [ 71, [ 127 ] ], [ 73, [ 131 ] ],
  [ 79, [ 141 ] ], [ 83, [ 153 ] ], [ 89, [ 165 ] ], [ 97, [ 171 ] ] ]

4. Вычисление значений частных сумм Титчмарша
gap> q1:=[];
[  ]
gap> qN1:=[];
[  ]
gap> for i in [1..l] do
> Add(q1,Q1[i]/lp[i]);
> Add(qN1,QN1[i]/lp[i]);
> od;
gap> q1;
[ [ 1/2 ], [ 1 ], [ 6/5 ], [ 10/7 ], [ 14/11 ], [ 20/13 ], [ 25/17 ], [ 31/19 ], [ 35/23 ], [ 41/29 ], [ 49/31 ], 
  [ 58/37 ], [ 66/41 ], [ 74/43 ], [ 78/47 ], [ 84/53 ], [ 88/59 ], [ 100/61 ], [ 108/67 ], [ 116/71 ], [ 128/73 ], 
  [ 136/79 ], [ 140/83 ], [ 148/89 ], [ 160/97 ] ]
gap> qN1;
[ [ 1 ], [ 5/3 ], [ 9/5 ], [ 13/7 ], [ 19/11 ], [ 23/13 ], [ 29/17 ], [ 35/19 ], [ 43/23 ], [ 51/29 ], [ 57/31 ], 
  [ 61/37 ], [ 69/41 ], [ 75/43 ], [ 85/47 ], [ 93/53 ], [ 105/59 ], [ 109/61 ], [ 115/67 ], [ 127/71 ], [ 131/73 ], 
  [ 141/79 ], [ 153/83 ], [ 165/89 ], [ 171/97 ] ]
gap> PqN1:=[];
[  ]
gap> Pq1:=[];
[  ]
gap> for i in [1..l] do
> Add(Pq1,[lp[i],q1[i]]);
> Add(PqN1,[lp[i],qN1[i]]);
> od;
gap> Pq1;
[ [ 2, [ 1/2 ] ], [ 3, [ 1 ] ], [ 5, [ 6/5 ] ], [ 7, [ 10/7 ] ], [ 11, [ 14/11 ] ], [ 13, [ 20/13 ] ], 
  [ 17, [ 25/17 ] ], [ 19, [ 31/19 ] ], [ 23, [ 35/23 ] ], [ 29, [ 41/29 ] ], [ 31, [ 49/31 ] ], [ 37, [ 58/37 ] ], 
  [ 41, [ 66/41 ] ], [ 43, [ 74/43 ] ], [ 47, [ 78/47 ] ], [ 53, [ 84/53 ] ], [ 59, [ 88/59 ] ], [ 61, [ 100/61 ] ], 
  [ 67, [ 108/67 ] ], [ 71, [ 116/71 ] ], [ 73, [ 128/73 ] ], [ 79, [ 136/79 ] ], [ 83, [ 140/83 ] ], 
  [ 89, [ 148/89 ] ], [ 97, [ 160/97 ] ] ]
gap> PqN1;
[ [ 2, [ 1 ] ], [ 3, [ 5/3 ] ], [ 5, [ 9/5 ] ], [ 7, [ 13/7 ] ], [ 11, [ 19/11 ] ], [ 13, [ 23/13 ] ], 
  [ 17, [ 29/17 ] ], [ 19, [ 35/19 ] ], [ 23, [ 43/23 ] ], [ 29, [ 51/29 ] ], [ 31, [ 57/31 ] ], [ 37, [ 61/37 ] ], 
  [ 41, [ 69/41 ] ], [ 43, [ 75/43 ] ], [ 47, [ 85/47 ] ], [ 53, [ 93/53 ] ], [ 59, [ 105/59 ] ], [ 61, [ 109/61 ] ], 
  [ 67, [ 115/67 ] ], [ 71, [ 127/71 ] ], [ 73, [ 131/73 ] ], [ 79, [ 141/79 ] ], [ 83, [ 153/83 ] ], 
  [ 89, [ 165/89 ] ], [ 97, [ 171/97 ] ] ]


5.Вычисление min и max значений частных
gap> maxq1:=MaximumList(q1);
[ 128/73 ]
gap> minq1:=MinimumList(q1);
[ 1/2 ]
gap> maxqN1:=MaximumList(qN1);
[ 43/23 ]
gap> minqN1:=MinimumList(qN1);
[ 1 ]

Находим позиции
gap> posmaxq1:=Positions(q1,maxq1);
[ 21 ]
gap> posminq1:=Positions(q1,minq1);
[ 1 ]
gap> posmaxqN1:=Positions(qN1,maxqN1);
[ 9 ]
gap> posminqN1:=Positions(qN1,minqN1);
[ 1 ]

Находим простые числа
gap> lp[1];
2
gap> lp[9];
23
gap> lp[21];
73
gap> quit;
